<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>linux学习笔记_01</title>
    <url>/2021/04/15/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01/</url>
    <content><![CDATA[<h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><h3 id="操作系统的作用"><a href="#操作系统的作用" class="headerlink" title="操作系统的作用"></a>操作系统的作用</h3><p>1.现代计算机系统中<strong>最基本和最重要</strong>的系统软件<br>2.配置在计算机<strong>硬件</strong>上的<strong>第一层</strong>软件，是对<strong>硬件系统</strong>的<strong>首次扩展</strong><br>3.主要作用是<strong>管理好硬件设备</strong>，并<strong>为用户和应用程序提供一个简单的接口</strong>，以便于使用<br>4.其他的诸如<strong>编译程序、数据库管理系统</strong>，以及大量的<strong>应用软件</strong>，都直接依赖于操作系统的支持  </p>
<span id="more"></span>

<h3 id="主流操作系统"><a href="#主流操作系统" class="headerlink" title="主流操作系统"></a>主流操作系统</h3><p>1.<strong>桌面</strong>操作系统  </p>
<ul>
<li><strong>windows</strong> 应用软件多用户群体大，安全性稳定性较差  </li>
<li><strong>macOS</strong> 适于开发  </li>
<li><strong>linux</strong> 应用软件较少</li>
</ul>
<p>2.<strong>服务器</strong>操作系统</p>
<ul>
<li><strong>linux</strong> 安全、稳定、免费，占有率高  </li>
<li><strong>windows server</strong> 付费，占有率低（.NET）</li>
</ul>
<p>3.<strong>嵌入式</strong>操作系统</p>
<ul>
<li><strong>linux</strong></li>
</ul>
<p>4.<strong>移动设备</strong>操作系统</p>
<ul>
<li>1.<strong>ios</strong>  </li>
<li>2.<strong>android</strong>（基于linux）</li>
</ul>
<hr>
<h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><p>虚拟机指通过<strong>软件</strong>模拟的具有<strong>完整硬件系统功能</strong>的、<strong>运行在一个完全隔离环境中的完整计算机系统</strong>  </p>
<blockquote>
<ul>
<li>虚拟系统通过生成现有操作系统的全新虚拟镜像，具有真实操作系统完全一样的功能</li>
<li>进入虚拟系统后，所有操作都是在这个全新的独立的虚拟系统里面进行，可以独立安装运行软件，保存数据，拥有自己的独立桌面，不会对真正的系统产生任何影响</li>
<li>能够在现有系统与虚拟镜像之间灵活切换</li>
</ul>
</blockquote>
<hr>
<h2 id="linux内核与发行版"><a href="#linux内核与发行版" class="headerlink" title="linux内核与发行版"></a>linux内核与发行版</h2><h3 id="linux-内核版本"><a href="#linux-内核版本" class="headerlink" title="linux 内核版本"></a>linux 内核版本</h3><ul>
<li><strong>内核</strong>是系统的心脏，是<strong>运行程序和管理像磁盘和打印机等硬件设备的核心程序</strong>，它提供了一个在裸设备与应用程序间的抽象层  </li>
</ul>
<h3 id="linux-发行版本"><a href="#linux-发行版本" class="headerlink" title="linux 发行版本"></a>linux 发行版本</h3><ul>
<li><strong>linux 发行版</strong>通常包含了包括<strong>桌面环境、办公套件、媒体播放器、数据库等</strong>应用软件<blockquote>
<p>常见的发行版本：<strong>Ubuntu</strong>、Redhat、Fedora、openSUSE、Linux Mint</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="linux-的应用领域"><a href="#linux-的应用领域" class="headerlink" title="linux 的应用领域"></a>linux 的应用领域</h2><p>1.服务器领域<br>2.嵌入式领域（运行稳定、对网络的良好支持性、低成本，且可以根据需要进行软件裁剪，内核小）<br>3.个人桌面领域（应用薄弱）</p>
<hr>
<h2 id="linux文件系统"><a href="#linux文件系统" class="headerlink" title="linux文件系统"></a>linux文件系统</h2><ul>
<li><code>Ubuntu</code> 没有盘符这个概念，只有一个根目录 <code>/</code>，所有文件都在它下面</li>
<li><code>/home/user</code>，称为用户工作目录或家目录</li>
</ul>
<h3 id="linux-文件和目录的特点"><a href="#linux-文件和目录的特点" class="headerlink" title="linux 文件和目录的特点"></a>linux 文件和目录的特点</h3><ul>
<li>Linux <strong>文件</strong>或者<strong>目录</strong>名称最长可以有256个字符</li>
<li>以 <code>.</code> 开头的文件为隐藏文件，需要用 <code>-a</code> 参数才能显示</li>
<li><strong>.</strong> 代表当前目录</li>
<li><strong>..</strong> 代表上一级目录</li>
</ul>
<h3 id="linux主要目录速查表"><a href="#linux主要目录速查表" class="headerlink" title="linux主要目录速查表"></a>linux主要目录速查表</h3><ul>
<li><strong>/:</strong> 根目录，<strong>一般根目录下只存放目录</strong>，在 linux 下有且只有一个根目录，所有的东西都是从这里开始  </li>
<li>当在终端里输入 <code>/home</code>，指先从 <code>/</code>（根目录）开始，再进入到 <code>home</code> 目录  </li>
<li><strong>/bin、/usr/bin</strong>：可执行二进制文件的目录，如常用的命令 ls、tar、mv、cat 等  </li>
<li>/boot：放置 linux 系统启动时用到的一些文件，如 linux 的内核文件：<code>/boot/vmlinuz</code>，系统引导管理器：<code>/boot/grub</code>  </li>
<li>/dev：存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱<code>mount /dev/cdrom /mnt</code></li>
<li><strong>/etc</strong>：系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有<code>/etc/inittab</code>、<code>/etc/fstab</code>、<code>/etc/init.d</code>、<code>/etc/X11</code>、<code>/etc/sysconfig</code>、<code>/etc/xinetd.d</code></li>
<li><strong>/home</strong>：系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下 <code>~</code> 表示当前用户的家目录</li>
<li>/lib、/usr/lib、/usr/local/lib：系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助</li>
<li>/lost+fount：系统异常产生错误时，会将一些遗失的片段放置于此目录下</li>
<li>/mnt: /media：光盘默认挂载点，通常光盘挂载于 <code>/mnt/cdrom</code> 下，也不一定，可以选择任意位置进行挂载</li>
<li>/opt：给主机额外安装软件所摆放的目录</li>
<li>/proc：此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的文件有：<code>/proc/cpuinfo</code>、<code>/proc/interrupts</code>、<code>/proc/dma</code>、<code>/proc/ioports</code>、<code>/proc/net</code> 等</li>
<li>/root：系统管理员root的家目录</li>
<li>/sbin、/usr/sbin、/usr/local/sbin：放置系统管理员使用的可执行命令，如 fdisk、shutdown、mount 等。与 /bin 不同的是，这几个目录是给系统管理员 root 使用的命令，一般用户只能”查看”而不能设置和使用</li>
<li>/tmp：一般用户或正在执行的程序临时存放文件的目录，任何人都可以访问，重要数据不可放置在此目录下</li>
<li>/srv：服务启动之后需要访问的数据目录，如 www 服务需要访问的网页数据存放在 /srv/www 内</li>
<li>/usr：应用程序存放目录<ul>
<li><code>/usr/bin</code>：存放应用程序</li>
<li><code>/usr/share</code>：存放共享数据</li>
<li><code>/usr/lib</code>：存放不能直接运行的，却是许多程序运行所必需的一些函数库文件</li>
<li><code>/usr/local</code>：存放软件升级包</li>
<li><code>/usr/share/doc</code>：系统说明文件存放目录</li>
<li><code>/usr/share/man</code>：程序说明文件存放目录</li>
</ul>
</li>
<li>/var：放置系统执行过程中经常变化的文件<ul>
<li><code>/var/log</code>：随时更改的日志文件  </li>
<li><code>/var/spool/mail</code>：邮件存放的目录</li>
<li><code>/var/run</code>：程序或服务启动后，其 PID 存放在该目录下</li>
</ul>
</li>
</ul>
<hr>
<h2 id="终端命令格式"><a href="#终端命令格式" class="headerlink" title="终端命令格式"></a>终端命令格式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span> [-options] [parameter]</span><br></pre></td></tr></table></figure>

<ul>
<li><code>command</code>：命令名</li>
<li><code>[-options]</code>：选项，用来对命令进行控制，可省略</li>
<li><code>parameter</code>：传给命令的参数，可以是 <strong>零个</strong>、<strong>一个</strong> 或者 <strong>多个</strong></li>
</ul>
<blockquote>
<p><code>[]</code> 代表可省略  </p>
</blockquote>
<h3 id="终端使用技巧"><a href="#终端使用技巧" class="headerlink" title="终端使用技巧"></a>终端使用技巧</h3><ul>
<li><code>tab</code>键可自动补全文件/目录/命令  </li>
<li>按上／下光标键可以在使用过的命令之间来回切换</li>
<li>退出选择，不执行当前选中的命令，可以按 <code>ctrl + c</code></li>
</ul>
<h3 id="查阅命令帮助信息"><a href="#查阅命令帮助信息" class="headerlink" title="查阅命令帮助信息"></a>查阅命令帮助信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<ul>
<li>显示命令的帮助信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">man <span class="built_in">command</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查阅命令的使用手册</li>
</ul>
<blockquote>
<p><code>man</code> 是 <strong>manual</strong> 的缩写，是 Linux 提供的一个手册，包含了绝大部分的命令、函数的详细使用说明</p>
</blockquote>
<p><strong>使用man时</strong>：<br>| 操作键 | 功能 |<br>| — | — |<br>| 空格键 | 显示手册页的下一屏 |<br>| Enter 键 | 一次滚动手册页的一行 |<br>| b | 回滚一屏 |<br>| f | 前滚一屏 |<br>| q | 退出 |<br>| /word | 搜索 <strong>word</strong> 字符串 |</p>
<hr>
<h2 id="相对路径和绝对路径"><a href="#相对路径和绝对路径" class="headerlink" title="相对路径和绝对路径"></a>相对路径和绝对路径</h2><ul>
<li><strong>相对路径</strong> 在输入路径时，最前面不是 <strong>/</strong> 或者 **~**，表示相对 <strong>当前目录</strong> 所在的目录位置</li>
<li><strong>绝对路径</strong> 在输入路径时，最前面是 <strong>/</strong> 或者 **~**，表示从 <strong>根目录/家目录</strong> 开始的具体目录位置</li>
</ul>
<hr>
<h2 id="常用linux命令的基本使用"><a href="#常用linux命令的基本使用" class="headerlink" title="常用linux命令的基本使用"></a>常用linux命令的基本使用</h2><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>对应英文</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>ls</td>
<td>list</td>
<td>查看当前文件夹下的内容</td>
</tr>
<tr>
<td>02</td>
<td>pwd</td>
<td>print work directory</td>
<td>查看当前所在文件夹</td>
</tr>
<tr>
<td>03</td>
<td>cd [目录名]</td>
<td>change directory</td>
<td>切换文件夹</td>
</tr>
<tr>
<td>04</td>
<td>touch [文件名]</td>
<td>touch</td>
<td>如果文件不存在，新建文件</td>
</tr>
<tr>
<td>05</td>
<td>mkdir [目录名]</td>
<td>make directory</td>
<td>创建目录</td>
</tr>
<tr>
<td>06</td>
<td>rm [文件名]</td>
<td>remove</td>
<td>删除指定的文件名</td>
</tr>
<tr>
<td>07</td>
<td>clear</td>
<td>clear</td>
<td>清屏</td>
</tr>
</tbody></table>
<h3 id="1-ls-命令说明"><a href="#1-ls-命令说明" class="headerlink" title="1. ls 命令说明"></a>1. ls 命令说明</h3><h4 id="1-1-ls-常用选项"><a href="#1-1-ls-常用选项" class="headerlink" title="1.1 ls 常用选项"></a>1.1 ls 常用选项</h4><table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-a</td>
<td>显示指定目录下所有子目录与文件，包括隐藏文件</td>
</tr>
<tr>
<td>-l</td>
<td>以列表方式显示文件的详细信息</td>
</tr>
<tr>
<td>-h</td>
<td>配合 -l 以kb的方式显示文件大小</td>
</tr>
</tbody></table>
<h4 id="1-2-ls-通配符的使用"><a href="#1-2-ls-通配符的使用" class="headerlink" title="1.2 ls 通配符的使用"></a>1.2 ls 通配符的使用</h4><table>
<thead>
<tr>
<th>通配符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>代表任意个数个字符</td>
</tr>
<tr>
<td>?</td>
<td>代表任意一个字符，至少 1 个</td>
</tr>
<tr>
<td>[]</td>
<td>表示可以匹配字符组中的任一一个</td>
</tr>
<tr>
<td>[abc]</td>
<td>匹配 a、b、c 中的任意一个</td>
</tr>
<tr>
<td>[a-f]</td>
<td>匹配从 a 到 f 范围内的的任意一个字符</td>
</tr>
</tbody></table>
<h3 id="2-cd-命令说明"><a href="#2-cd-命令说明" class="headerlink" title="2. cd 命令说明"></a>2. cd 命令说明</h3><h4 id="2-1-cd-常用命令"><a href="#2-1-cd-常用命令" class="headerlink" title="2.1 cd 常用命令"></a>2.1 cd 常用命令</h4><table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>cd</td>
<td>切换到当前用户的主目录(/home/用户目录)</td>
</tr>
<tr>
<td>cd ~</td>
<td>切换到当前用户的主目录(/home/用户目录)</td>
</tr>
<tr>
<td>cd .</td>
<td>保持在当前目录不变</td>
</tr>
<tr>
<td>cd ..</td>
<td>切换到上级目录</td>
</tr>
<tr>
<td>cd -</td>
<td>可以在最近两次工作目录之间来回切换</td>
</tr>
</tbody></table>
<h3 id="3-创建和删除命令"><a href="#3-创建和删除命令" class="headerlink" title="3. 创建和删除命令"></a>3. 创建和删除命令</h3><h4 id="3-1-touch-命令"><a href="#3-1-touch-命令" class="headerlink" title="3.1 touch 命令"></a>3.1 touch 命令</h4><ul>
<li>创建文件或修改文件时间<ul>
<li>如果文件<strong>不存在</strong>，可以创建一个空白文件</li>
<li>如果文件<strong>已经存在</strong>，可以修改文件的末次<strong>修改日期</strong>（不影响文件本身内容）</li>
</ul>
</li>
</ul>
<h4 id="3-2-mkdir-命令"><a href="#3-2-mkdir-命令" class="headerlink" title="3.2 mkdir 命令"></a>3.2 mkdir 命令</h4><ul>
<li>创建一个新的目录(名称不能同名)</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-p</td>
<td>可以递归创建目录</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p a/b/c/d</span><br></pre></td></tr></table></figure>

<h4 id="3-3-rm-命令"><a href="#3-3-rm-命令" class="headerlink" title="3.3 rm 命令"></a>3.3 rm 命令</h4><ul>
<li>删除文件或目录（使用 <code>rm</code>文件删除后不能恢复）</li>
<li>通配符适用（**不能在根目录下 <code>rm -rf *</code>**）</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-f</td>
<td>强制删除，忽略不存在的文件，无需提示</td>
</tr>
<tr>
<td>-r</td>
<td>递归地删除目录下的内容，<strong>删除文件夹</strong>时必须加此参数</td>
</tr>
</tbody></table>
<h3 id="4-拷贝和移动文件"><a href="#4-拷贝和移动文件" class="headerlink" title="4. 拷贝和移动文件"></a>4. 拷贝和移动文件</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>对应英文</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>tree [目录名]</td>
<td>tree</td>
<td>以树状图列出文件目录结构</td>
</tr>
<tr>
<td>02</td>
<td>cp 源文件 目标文件</td>
<td>copy</td>
<td>复制文件或者目录</td>
</tr>
<tr>
<td>03</td>
<td>mv 源文件 目标文件</td>
<td>move</td>
<td>移动文件或者目录／文件或者目录重命名</td>
</tr>
</tbody></table>
<h4 id="4-1-tree-命令"><a href="#4-1-tree-命令" class="headerlink" title="4.1 tree 命令"></a>4.1 tree 命令</h4><ul>
<li>以树状图列出文件目录结构（初次使用需下载tree，在联网条件下输入<code>sudo apt-get -y install tree</code>）</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-d</td>
<td>只显示目录</td>
</tr>
</tbody></table>
<h4 id="4-2-cp-命令"><a href="#4-2-cp-命令" class="headerlink" title="4.2 cp 命令"></a>4.2 cp 命令</h4><ul>
<li>将给出的 <strong>文件</strong> 或 <strong>目录</strong> 复制到另一个 <strong>文件</strong> 或 <strong>目录</strong> 中</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-i</td>
<td>覆盖文件前提示</td>
</tr>
<tr>
<td>-r</td>
<td>若源文件是目录文件，则 cp 将递归复制该目录下的所有子目录和文件，目标文件必须为目录名</td>
</tr>
</tbody></table>
<h4 id="4-3-mv-命令"><a href="#4-3-mv-命令" class="headerlink" title="4.3 mv 命令"></a>4.3 mv 命令</h4><ul>
<li>可以用来 <strong>移动</strong>文件或目录，也可以给文件或目录<strong>重命名</strong>（移动到同一文件夹下）（文件移动最好使用-i选项）</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-i</td>
<td>覆盖文件前提示</td>
</tr>
</tbody></table>
<h3 id="5-查看文件内容"><a href="#5-查看文件内容" class="headerlink" title="5. 查看文件内容"></a>5. 查看文件内容</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>对应英文</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>cat 文件名</td>
<td>concatenate</td>
<td>查看文件内容、创建文件、文件合并、追加文件内容等功能</td>
</tr>
<tr>
<td>02</td>
<td>more 文件名</td>
<td>more</td>
<td>分屏显示文件内容</td>
</tr>
<tr>
<td>03</td>
<td>grep 搜索文本 文件名</td>
<td>grep</td>
<td>搜索文本文件内容</td>
</tr>
</tbody></table>
<h4 id="5-1-cat命令"><a href="#5-1-cat命令" class="headerlink" title="5.1 cat命令"></a>5.1 cat命令</h4><ul>
<li>用来 <strong>查看文件内容</strong>、<strong>创建文件</strong>、<strong>文件合并</strong>、<strong>追加文件内容</strong></li>
<li>一次显示所有的内容，适合<strong>查看内容较少</strong>的文本文件</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-b</td>
<td>对非空输出行编号</td>
</tr>
<tr>
<td>-n</td>
<td>对输出的所有行编号</td>
</tr>
</tbody></table>
<blockquote>
<p><code>nl</code> 的命令和 <code>cat -b</code> 的效果等价</p>
</blockquote>
<h4 id="5-2-more命令"><a href="#5-2-more命令" class="headerlink" title="5.2 more命令"></a>5.2 more命令</h4><ul>
<li>用于分屏显示文件内容，每次只显示一页内容</li>
<li>适合于<strong>查看内容较多</strong>的文本文件</li>
</ul>
<p>使用 <code>more</code> 的操作键：</p>
<table>
<thead>
<tr>
<th>操作键</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>空格键</td>
<td>显示手册页的下一屏</td>
</tr>
<tr>
<td>Enter</td>
<td>一次滚动手册页的一行</td>
</tr>
<tr>
<td>b</td>
<td>回滚一屏</td>
</tr>
<tr>
<td>f</td>
<td>前滚一屏</td>
</tr>
<tr>
<td>q</td>
<td>退出</td>
</tr>
<tr>
<td>/word</td>
<td>搜索 <strong>word</strong> 字符串</td>
</tr>
</tbody></table>
<h4 id="5-3-grep命令"><a href="#5-3-grep命令" class="headerlink" title="5.3 grep命令"></a>5.3 grep命令</h4><ul>
<li>强大的文本搜索工具</li>
<li>允许对文本文件进行<strong>模式</strong>查找，又被称为正则表达式</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-n</td>
<td>显示匹配行及行号</td>
</tr>
<tr>
<td>-v</td>
<td>显示不包含匹配文本的所有行（相当于求反）</td>
</tr>
<tr>
<td>-i</td>
<td>忽略大小写</td>
</tr>
</tbody></table>
<ul>
<li>常用的两种模式查找</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>^a</td>
<td>行首，搜寻以 <strong>a</strong> 开头的行</td>
</tr>
<tr>
<td>a$</td>
<td>行尾，搜寻以 <strong>a</strong> 结束的行</td>
</tr>
</tbody></table>
<h3 id="6-其他命令"><a href="#6-其他命令" class="headerlink" title="6. 其他命令"></a>6. 其他命令</h3><h4 id="6-1-echo-命令"><a href="#6-1-echo-命令" class="headerlink" title="6.1 echo 命令"></a>6.1 echo 命令</h4><ul>
<li>在终端中显示参数指定的文字，通常和<strong>重定向</strong>联合使用</li>
</ul>
<h4 id="6-2-重定向-gt-和-gt-gt-命令"><a href="#6-2-重定向-gt-和-gt-gt-命令" class="headerlink" title="6.2 重定向 &gt; 和 &gt;&gt;命令"></a>6.2 重定向 <code>&gt;</code> 和 <code>&gt;&gt;</code>命令</h4><ul>
<li>Linux 允许将命令执行结果 <strong>重定向</strong>到一个 <strong>文件</strong></li>
<li>将本应显示在终端上的内容<strong>输出／追加</strong>到<strong>指定文件中</strong></li>
</ul>
<p>其中</p>
<ul>
<li><code>&gt;</code> 表示<strong>输出</strong>，会<strong>覆盖文件原有的内容</strong></li>
<li><code>&gt;&gt;</code> 表示<strong>追加</strong>，会<strong>将内容追加到已有文件的末尾</strong></li>
</ul>
<h4 id="6-3-管道-命令"><a href="#6-3-管道-命令" class="headerlink" title="6.3 管道 |命令"></a>6.3 管道 <code>|</code>命令</h4><ul>
<li>将<strong>一个命令的输出</strong>通过管道做为<strong>另一个命令的输入</strong></li>
<li>可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里 <code>|</code> 的左右分为两端，左端塞东西（写），右端取东西（读）</li>
</ul>
<p>常用的管道命令有：</p>
<ul>
<li><code>more</code>：分屏显示内容</li>
<li><code>grep</code>：在命令执行结果的基础上查询指定的文本</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>spawn failed解决方法</title>
    <url>/2021/07/17/spawn%20failed%20%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<ol>
<li>验证<code>ssh</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Hi lshanan! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
</blockquote>
<span id="more"></span>

<p>2.删除<code>.deploy_git</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line">hexo clean &amp;&amp; g &amp;&amp; s</span><br></pre></td></tr></table></figure>

<p>3.修改配置<code>repo</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">repo: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">repo: git@github.com:yourname/yourname.github.io.git</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>linux学习笔记_02</title>
    <url>/2021/04/25/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02/</url>
    <content><![CDATA[<h2 id="远程管理常用命令"><a href="#远程管理常用命令" class="headerlink" title="远程管理常用命令"></a>远程管理常用命令</h2><h3 id="1-1-shutdown-命令"><a href="#1-1-shutdown-命令" class="headerlink" title="1.1 shutdown 命令"></a>1.1 shutdown 命令</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>对应英文</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>shutdown 选项 时间</td>
<td>shutdown</td>
<td>关机／重新启动</td>
</tr>
</tbody></table>
<ul>
<li><code>shutdown</code> 命令可以<strong>安全关闭</strong>或者<strong>重新启动系统</strong></li>
</ul>
<span id="more"></span>

<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-r</td>
<td>重新启动</td>
</tr>
</tbody></table>
<blockquote>
<ul>
<li><strong>不指定选项和参数</strong>，默认表示<strong>1分钟</strong>之后<strong>关闭电脑</strong></li>
<li>远程维护服务器时，关闭系统后不方便开启，最好不要关闭系统，而应该重新启动系统</li>
</ul>
</blockquote>
<ul>
<li><strong>常用命令示例</strong></li>
<li>立刻重新启动操作系统  <code>shutdown -r now</code></li>
<li>立刻关机 <code>shutdown now</code></li>
<li>系统在今天的20:25会关机 <code>shutdown 20:25</code></li>
<li>系统再过十分钟后自动关机 <code>shutdown +10</code></li>
<li><strong>取消之前指定的关机计划 <code>shutdown -c</code></strong></li>
</ul>
<h3 id="2-查看或配置网卡信息"><a href="#2-查看或配置网卡信息" class="headerlink" title="2. 查看或配置网卡信息"></a>2. 查看或配置网卡信息</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>对应英文</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>ifconfig</td>
<td>configure a network interface</td>
<td>查看/配置计算机当前的网卡配置信息</td>
</tr>
<tr>
<td>02</td>
<td>ping ip地址</td>
<td>ping</td>
<td>检测到目标 ip地址 的连接是否正常</td>
</tr>
</tbody></table>
<h4 id="2-1-ifconfig-命令"><a href="#2-1-ifconfig-命令" class="headerlink" title="2.1 ifconfig 命令"></a>2.1 ifconfig 命令</h4><ul>
<li><code>ifconfig</code> 可以<strong>查看／配置</strong>计算机当前的网卡配置信息</li>
<li>查看网卡配置信息 <code>ifconfig</code></li>
<li>查看网卡对应的 IP 地址 <strong><code>ifconfig | grep inet</code></strong></li>
</ul>
<blockquote>
<p>在 Linux 中物理网卡的名字通常以 <code>ensXX</code> 表示<br><code>127.0.0.1</code> 被称为 <strong>本地回环/环回地址</strong>，一般用来测试本机网卡是否正常</p>
</blockquote>
<h4 id="2-2-ping-命令"><a href="#2-2-ping-命令" class="headerlink" title="2.2 ping 命令"></a>2.2 ping 命令</h4><ul>
<li><p>检测到目标主机是否连接正常 <code>ping IP地址</code></p>
</li>
<li><p>检测本地网卡工作正常 <code>ping 127.0.0.1</code></p>
</li>
<li><p><code>ping</code> 一般用于检测当前计算机到目标计算机之间的网络<strong>是否通畅</strong>，<strong>数值越大，速度越慢</strong></p>
</li>
</ul>
<blockquote>
<ul>
<li>原理：网络上的机器都有<strong>唯一确定的 IP 地址</strong>，我们给<strong>目标 IP 地址</strong>发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，可以确定目标主机的存在</li>
<li>在 Linux 中，想要终止一个终端程序的执行，绝大多数都可以使用<strong>CTRL+C</strong></li>
</ul>
</blockquote>
<h3 id="3-远程登录和复制文件"><a href="#3-远程登录和复制文件" class="headerlink" title="3. 远程登录和复制文件"></a>3. 远程登录和复制文件</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>对应英文</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>ssh 用户名@ip</td>
<td>secure shell</td>
<td>关机／重新启动</td>
</tr>
<tr>
<td>02</td>
<td>scp 用户名@ip:文件名或路径 用户名@ip:文件名或路径</td>
<td>secure copy</td>
<td>远程复制文件</td>
</tr>
</tbody></table>
<h4 id="3-1-ssh-基础"><a href="#3-1-ssh-基础" class="headerlink" title="3.1 ssh 基础"></a>3.1 <code>ssh</code> 基础</h4><ul>
<li>在linux中<strong>SSH</strong>是非常常用的工具，通<strong>SSH客户端</strong>可以连接到运行<strong>SSH服务器</strong>的远程机器上</li>
<li><strong>SSH 客户端</strong>是一种使用 <code>Secure Shell（SSH）</code> 协议连接到远程计算机的软件程序</li>
<li><code>SSH</code> 是目前较可靠，专为<strong>远程登录会话和其他网络服务</strong> 提供安全性的协议<ul>
<li>利用 <code>SSH 协议</code> 可以有效<strong>防止远程管理过程中的信息泄露</strong></li>
<li>通过 <code>SSH 协议</code> 可以对所有传输的数据进行加密，也能够防止 DNS 欺骗和 IP 欺骗</li>
<li><code>SSH</code> 的另一项优点是传输的数据可以是经过压缩的，所以可以<strong>加快传输的速度</strong></li>
</ul>
</li>
</ul>
<blockquote>
<ul>
<li><strong>IP 地址</strong>：通过<strong>IP 地址</strong>找到网络上的<strong>计算机</strong></li>
<li><strong>端口号</strong>：通过<strong>端口号</strong>可以找到<strong>计算机上运行的应用程序</strong></li>
</ul>
</blockquote>
<ul>
<li><p><strong>SSH服务器</strong>的默认端口号是<strong>22</strong>，默认端口号在连接的时候可以省略</p>
</li>
<li><p>常见服务默认端口号列表：</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>服务</th>
<th>端口号</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>SSH 服务器</td>
<td>22</td>
</tr>
<tr>
<td>02</td>
<td>Web 服务器</td>
<td>80</td>
</tr>
<tr>
<td>03</td>
<td>HTTPS</td>
<td>443</td>
</tr>
<tr>
<td>04</td>
<td>FTP 服务器</td>
<td>21</td>
</tr>
</tbody></table>
<h4 id="3-2-SSH客户端的简单使用"><a href="#3-2-SSH客户端的简单使用" class="headerlink" title="3.2 SSH客户端的简单使用"></a>3.2 SSH客户端的简单使用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh [-p port] user@remote</span><br></pre></td></tr></table></figure>

<ul>
<li><code>user</code> 是在远程机器上的用户名，不指定的话默认为当前用户</li>
<li><code>remote</code> 是远程机器的地址，可以是<strong>IP</strong>／<strong>域名</strong>，或者是<strong>别名</strong></li>
<li><code>port</code> 是 <strong>SSH Server 监听的端口</strong>，不指定为默认值<strong>22</strong></li>
</ul>
<blockquote>
<ul>
<li>使用 <code>exit</code> 退出当前用户的登录  </li>
<li><code>ssh</code> 这个终端命令只能在 <code>Linux</code> 或者 <code>UNIX</code> 系统下使用</li>
</ul>
</blockquote>
<h4 id="3-3-scp-命令"><a href="#3-3-scp-命令" class="headerlink" title="3.3 scp 命令"></a>3.3 scp 命令</h4><ul>
<li>scp 是 <code>secure copy</code>，是一个在 linux 下用来进行<strong>远程拷贝文件</strong>的命令</li>
<li><strong>地址格式与ssh基本相同</strong>，但在指定端口时用大写的 <code>-P</code> 不是小写的</li>
</ul>
<blockquote>
<ul>
<li>把本地当前目录下的 01.py 文件 复制到远程家目录下的 Desktop/01.py<br>注意：<code>:</code> 后面的路径如果不是绝对路径，则以用户的家目录作为参照路径<code>scp -P port 01.py user@remote:Desktop/01.py</code></li>
<li>把远程家目录下的 Desktop/01.py 文件复制到本地当前目录下的 01.py<br><code>scp -P port user@remote:Desktop/01.py 01.py</code></li>
<li>加上 -r 选项可以传送文件夹  <ul>
<li>把当前目录下的 demo 文件夹 复制到 远程 家目录下的 Desktopscp -r demo user@remote:Desktop</li>
<li>把远程 家目录下的 Desktop 复制到 当前目录下的 demo 文件夹<code>scp -r user@remote:Desktop demo</code></li>
</ul>
</li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-r</td>
<td>若给出的源文件是目录文件，则 scp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td>
</tr>
<tr>
<td>-P</td>
<td>若远程 SSH 服务器的端口不是 22，需要使用大写字母 -P 选项指定端口</td>
</tr>
</tbody></table>
<blockquote>
<ul>
<li><code>scp</code> 命令只能在 <code>Linux</code> 或者 <code>UNIX</code> 系统下使用</li>
<li>在 <code>Windows</code> 系统中，可以安装 <code>PuTTY</code>，使用 <code>pscp</code> 命令行工具或者安装 <code>FileZilla</code> 使用 <code>FTP</code> 进行文件传输(端口号22)</li>
</ul>
</blockquote>
<h4 id="3-4-ssh高级"><a href="#3-4-ssh高级" class="headerlink" title="3.4 ssh高级"></a>3.4 ssh高级</h4><ul>
<li>免密码登录</li>
<li>配置别名</li>
</ul>
<blockquote>
<p>有关 SSH 配置信息都保存在用户家目录下的 <code>.ssh</code> 目录（隐藏目录）下</p>
</blockquote>
<h5 id="3-4-1-免密码登录"><a href="#3-4-1-免密码登录" class="headerlink" title="3.4.1 免密码登录"></a>3.4.1 免密码登录</h5><p>步骤</p>
<ul>
<li>配置公钥<ul>
<li>执行 <code>ssh-keygen</code> 即可生成 SSH 钥匙</li>
</ul>
</li>
<li>上传公钥到服务器<ul>
<li>执行 <code>ssh-copy-id -p port user@remote</code>，让远程服务器记住公钥</li>
</ul>
</li>
</ul>
<blockquote>
<p>非对称加密算法</p>
<ul>
<li>使用 <strong>公钥</strong> 加密的数据，需要使用 <strong>私钥</strong> 解密</li>
<li>使用 <strong>私钥</strong> 加密的数据，需要使用 <strong>公钥</strong> 解密</li>
</ul>
</blockquote>
<h5 id="3-4-2-配置别名"><a href="#3-4-2-配置别名" class="headerlink" title="3.4.2 配置别名"></a>3.4.2 配置别名</h5><p><strong>配置别名</strong> 譬如用：<code>ssh mac</code> 来替代，那么就在 <code>~/.ssh/config</code> 里面追加以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host mac</span><br><span class="line">    HostName ip地址</span><br><span class="line">    User itheima</span><br><span class="line">    Port 22</span><br></pre></td></tr></table></figure>

<p><strong>保存之后，即可用 <code>ssh mac</code> 实现远程登录，<code>scp</code> 同样可以使用</strong></p>
]]></content>
  </entry>
  <entry>
    <title>linux学习笔记03</title>
    <url>/2021/05/15/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_03/</url>
    <content><![CDATA[<h2 id="用户权限相关命令"><a href="#用户权限相关命令" class="headerlink" title="用户权限相关命令"></a>用户权限相关命令</h2><h3 id="1-用户和权限"><a href="#1-用户和权限" class="headerlink" title="1. 用户和权限"></a>1. 用户和权限</h3><h4 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h4><ul>
<li><strong>用户</strong>是linux 系统工作中重要的一环，用户管理包括<strong>用户</strong>与<strong>组</strong>管理</li>
<li>在linux系统中，不论是由本机或是远程登录系统，每个系统都<strong>必须拥有一个账号</strong>，并且<strong>对于不同的系统资源拥有不同的使用权限</strong></li>
<li>在linux 中，可以指定<strong>每一个用户</strong>针对<strong>不同的文件或者目录</strong>的<strong>不同权限</strong></li>
</ul>
<span id="more"></span>

<ul>
<li>对<strong>文件／目录</strong>的权限包括：</li>
</ul>
<table>
<thead>
<tr>
<th align="center">权限</th>
<th align="center">英文</th>
<th align="center">缩写</th>
<th align="center">数字代号</th>
</tr>
</thead>
<tbody><tr>
<td align="center">读</td>
<td align="center">read</td>
<td align="center">r</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">写</td>
<td align="center">write</td>
<td align="center">w</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">执行</td>
<td align="center">excute</td>
<td align="center">x</td>
<td align="center">1</td>
</tr>
</tbody></table>
<h4 id="1-2-组"><a href="#1-2-组" class="headerlink" title="1.2 组"></a>1.2 组</h4><ul>
<li>在实际应用中，可以预先针对<strong>组</strong>设置好权限，然后<strong>将不同的用户添加到对应的组中</strong>，从而<strong>不用依次为每一个用户设置权限</strong></li>
</ul>
<h4 id="1-3-ls-l-扩展"><a href="#1-3-ls-l-扩展" class="headerlink" title="1.3 ls -l 扩展"></a>1.3 ls -l 扩展</h4><ul>
<li><code>ls -l</code> 可以查看文件夹下文件的详细信息，从左到右依次是：<ul>
<li><strong>权限</strong>，第 1 个字符如果是 <code>d</code> 表示目录</li>
<li><strong>硬链接数</strong>，通俗地讲，就是有多少种方式，可以访问到当前目录／文件</li>
<li><strong>拥有者</strong>，家目录下 文件／目录 的拥有者通常都是当前用户</li>
<li><strong>组</strong>，在linux中，很多时候，会出现组名和用户名相同的情况</li>
<li><strong>大小</strong></li>
<li><strong>时间</strong></li>
<li><strong>名称</strong></li>
</ul>
</li>
</ul>
<h4 id="1-4-chmod-命令"><a href="#1-4-chmod-命令" class="headerlink" title="1.4  chmod 命令"></a>1.4  chmod 命令</h4><ul>
<li><code>chmod</code> （change mode）可以修改 <strong>用户／组</strong> 对 <strong>文件／目录</strong>的权限</li>
<li>命令格式如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod +/-rwx 文件名|目录名</span><br></pre></td></tr></table></figure>

<blockquote>
<p>以上方式会一次性修改拥有者/组权限</p>
</blockquote>
<h4 id="1-5-超级用户"><a href="#1-5-超级用户" class="headerlink" title="1.5 超级用户"></a>1.5 超级用户</h4><ul>
<li>linux系统中的 <code>root</code> 账号通常<strong>用于系统的维护和管理</strong>，对操作系统的所有资源<strong>具有所有访问权限</strong></li>
<li>在大多数版本的linux中，都不推荐<strong>直接使用 root 账号登录系统</strong></li>
<li>在linux安装的过程中，系统会自动创建一个用户账号，而这个默认的用户就称为<strong>标准用户</strong></li>
</ul>
<h5 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h5><ul>
<li><code>su</code> 是 <code>substitute user</code> 的缩写，表示<strong>使用另一个用户的身份</strong></li>
<li><code>sudo</code> 命令用来以其他身份来执行命令，预设的身份为 <code>root</code></li>
<li>用户使用 <code>sudo</code> 时，必须先输入密码，之后有<strong>5 分钟的有效期限</strong>，超过期限则须重新输入密码</li>
</ul>
<blockquote>
<p>若其未经授权的用户企图使用<code>sudo</code>，则会发出警告邮件给管理员</p>
</blockquote>
<h3 id="2-组管理终端命令"><a href="#2-组管理终端命令" class="headerlink" title="2. 组管理终端命令"></a>2. 组管理终端命令</h3><blockquote>
<p><strong>创建组</strong> / <strong>删除组</strong>的终端命令都需要通过 <code>sudo</code> 执行</p>
</blockquote>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>groupadd 组名</td>
<td>添加组</td>
</tr>
<tr>
<td>2</td>
<td>groupdel 组名</td>
<td>删除组</td>
</tr>
<tr>
<td>3</td>
<td>cat /etc/group</td>
<td>确认组信息</td>
</tr>
<tr>
<td>4</td>
<td>chgrp -R 组名 文件/目录名</td>
<td>递归修改文件/目录的所属组</td>
</tr>
</tbody></table>
<blockquote>
<ul>
<li>组信息保存在 <code>/etc/group</code> 文件中</li>
<li><code>/etc</code> 目录是专门用来保存 <strong>系统配置信息</strong> 的目录</li>
</ul>
</blockquote>
<ul>
<li>在实际应用中，可以预先针对<strong>组</strong>设置好权限，然后<strong>将不同的用户添加到对应的组中</strong>，从而<strong>不用依次为每一个用户设置权限</strong></li>
</ul>
<h3 id="3-用户管理终端命令"><a href="#3-用户管理终端命令" class="headerlink" title="3. 用户管理终端命令"></a>3. 用户管理终端命令</h3><blockquote>
<p><strong>创建用户</strong> / <strong>删除用户</strong> / <strong>修改其他用户密码</strong> 的终端命令都需要通过 <code>sudo</code> 执行</p>
</blockquote>
<h4 id="3-1-创建用户／设置密码／删除用户"><a href="#3-1-创建用户／设置密码／删除用户" class="headerlink" title="3.1 创建用户／设置密码／删除用户"></a>3.1 创建用户／设置密码／删除用户</h4><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>useradd -m -g 组 新建用户名</td>
<td>添加新用户</td>
<td>-m 自动建立用户家目录 -g 指定用户所在的组，否则会建立一个和同名的组</td>
</tr>
<tr>
<td>02</td>
<td>passwd 用户名</td>
<td>设置用户密码</td>
<td>如果是普通用户，直接用 passwd 可以修改自己的账户密码</td>
</tr>
<tr>
<td>03</td>
<td>userdel -r 用户名</td>
<td>删除用户</td>
<td>-r 选项会自动删除用户家目录</td>
</tr>
<tr>
<td>04</td>
<td>cat /etc/passwd | grep 用户名</td>
<td>确认用户信息</td>
<td>新建用户后，用户信息会保存在 /etc/passwd 文件中</td>
</tr>
</tbody></table>
<blockquote>
<ul>
<li>创建用户时，忘记添加 <code>-m</code> 选项指定新用户的家目录，最简单的方法是<strong>删除用户，重新创建</strong></li>
<li>创建用户时，默认会创建一个和<strong>用户名</strong>同名的<strong>组名</strong></li>
<li>用户信息保存在 <code>/etc/passwd</code> 文件中</li>
</ul>
</blockquote>
<h4 id="3-2-查看用户信息"><a href="#3-2-查看用户信息" class="headerlink" title="3.2 查看用户信息"></a>3.2 查看用户信息</h4><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>id [用户名]</td>
<td>查看用户 UID 和 GID 信息</td>
</tr>
<tr>
<td>02</td>
<td>who</td>
<td>查看当前所有登录的用户列表</td>
</tr>
<tr>
<td>03</td>
<td>whoami</td>
<td>查看当前登录用户的账户名</td>
</tr>
</tbody></table>
<h5 id="3-2-1-passwd-文件"><a href="#3-2-1-passwd-文件" class="headerlink" title="3.2.1 passwd 文件"></a>3.2.1 passwd 文件</h5><p><code>/etc/passwd</code> 文件存放的是用户的信息，由 6 个分号组成的 7 个信息，分别是</p>
<ol>
<li>用户名</li>
<li>密码（x，表示加密的密码）</li>
<li>UID（用户标识）</li>
<li>GID（组标识）</li>
<li>用户全名或本地帐号</li>
<li>家目录</li>
<li>登录使用的 Shell，就是登录之后，使用的终端命令，<code>ubuntu</code> 默认是 <code>dash</code></li>
</ol>
<h5 id="3-2-2-usermod"><a href="#3-2-2-usermod" class="headerlink" title="3.2.2 usermod"></a>3.2.2 usermod</h5><ul>
<li><code>usermod</code> 可以用来设置<strong>用户</strong>的<strong>主组</strong> ／ <strong>附加组</strong> 和<strong>登录 Shell</strong></li>
<li><strong>主组</strong>：通常在新建用户时指定，在 <code>etc/passwd</code> 的第 4 列 <strong>GID 对应的组</strong></li>
<li><strong>附加组</strong>：在 <code>etc/group</code> 中最后一列表示该组的用户列表，用于指定 <strong>用户的附加权限</strong></li>
</ul>
<blockquote>
<p>设置了用户的附加组之后，需要重新登录才能生效</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">修改用户的主组（passwd 中的 GID）</span><br><span class="line">usermod -g 组 用户名</span><br><span class="line">修改用户的附加组</span><br><span class="line">usermod -G 组 用户名</span><br><span class="line">修改用户登录 Shell</span><br><span class="line">usermod -s /bin/bash 用户名</span><br></pre></td></tr></table></figure>

<blockquote>
<p>默认使用 <code>useradd</code> 添加的用户没有权限使用 <code>sudo</code> 以 <code>root</code> 身份执行命令的，可以使用以下命令，将用户添加到 <code>sudo</code> 附加组中</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usermod -G sudo 用户名</span><br></pre></td></tr></table></figure>

<h5 id="3-2-3-which"><a href="#3-2-3-which" class="headerlink" title="3.2.3 which"></a>3.2.3 which</h5><blockquote>
<ul>
<li><code>/etc/passwd</code> 是用于保存用户信息的文件</li>
<li><code>/usr/bin/passwd</code> 是用于修改用户密码的程序</li>
</ul>
</blockquote>
<ul>
<li><code>which</code> 命令可以查看执行命令所在位置，例如：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="comment"># /bin/ls</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">which</span> useradd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="comment"># /usr/sbin/useradd</span></span><br></pre></td></tr></table></figure>

<h5 id="3-2-4-bin和sbin"><a href="#3-2-4-bin和sbin" class="headerlink" title="3.2.4 bin和sbin"></a>3.2.4 bin和sbin</h5><ul>
<li>在 <code>Linux</code> 中，绝大多数可执行文件都是保存在 <code>/bin</code>、<code>/sbin</code>、<code>/usr/bin</code>、<code>/usr/sbin</code></li>
<li><code>/bin</code>（<code>binary</code>）是二进制执行文件目录，主要用于<strong>具体应用</strong></li>
<li><code>/sbin</code>（<code>system binary</code>）是系统管理员专用的二进制代码存放目录，主要用于<strong>系统管理</strong></li>
<li><code>/usr/bin</code>（<code>user commands for applications</code>）后期安装的一些软件</li>
<li><code>/usr/sbin</code>（<code>super user commands for applications</code>）超级用户的一些<strong>管理程序</strong></li>
</ul>
<blockquote>
<ul>
<li><code>cd</code> 这个终端命令是内置在系统内核中的，<strong>没有独立的文件</strong>，用 <code>which</code> 无法找到 <code>cd</code> 命令的位置</li>
</ul>
</blockquote>
<h4 id="3-3-切换用户"><a href="#3-3-切换用户" class="headerlink" title="3.3 切换用户"></a>3.3 切换用户</h4><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>su - 用户名</td>
<td>切换用户，并且切换目录</td>
<td>- 可以切换到用户家目录，否则保持位置不变</td>
</tr>
<tr>
<td>02</td>
<td>exit</td>
<td>退出当前登录账户</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li><code>su</code> 不接用户名，可以切换到 <code>root</code>（不推荐使用，不安全）</li>
</ul>
<h3 id="4-修改文件权限"><a href="#4-修改文件权限" class="headerlink" title="4. 修改文件权限"></a>4. 修改文件权限</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>chown</td>
<td>修改拥有者</td>
</tr>
<tr>
<td>02</td>
<td>chgrp</td>
<td>修改组</td>
</tr>
<tr>
<td>03</td>
<td>chmod</td>
<td>修改权限</td>
</tr>
</tbody></table>
<ul>
<li>命令格式如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">修改文件|目录的拥有者  chown 用户名 文件名|目录名</span><br><span class="line">递归修改文件|目录的组  chgrp -R 组名 文件名|目录名</span><br><span class="line">递归修改文件权限       chmod -R 755 文件名|目录名</span><br></pre></td></tr></table></figure>

<ul>
<li><code>chmod</code> 在设置权限时，可以简单地使用三个数字分别对应<strong>拥有者</strong>／<strong>组</strong>和<strong>其他</strong>用户的权限</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">直接修改文件|目录的 读|写|执行 权限，但是不能精确到拥有者|组|其他</span><br><span class="line">chmod +/-rwx 文件名|目录名</span><br></pre></td></tr></table></figure>

<ul>
<li>常见数字组合有（<code>u</code>表示用户／<code>g</code>表示组／<code>o</code>表示其他）：<ul>
<li><code>777</code> ===&gt; <code>u=rwx,g=rwx,o=rwx</code>  </li>
<li><code>755</code> ===&gt; <code>u=rwx,g=rx,o=rx</code></li>
<li><code>644</code> ===&gt; <code>u=rw,g=r,o=r</code></li>
</ul>
</li>
</ul>
<hr>
<h2 id="系统信息相关命令"><a href="#系统信息相关命令" class="headerlink" title="系统信息相关命令"></a>系统信息相关命令</h2><h3 id="1-时间和日期"><a href="#1-时间和日期" class="headerlink" title="1. 时间和日期"></a>1. 时间和日期</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>date</td>
<td>查看系统时间</td>
</tr>
<tr>
<td>02</td>
<td>cal</td>
<td><code>calendar</code> 查看日历，<code>-y</code> 选项可以查看一年的日历</td>
</tr>
</tbody></table>
<h3 id="2-磁盘信息"><a href="#2-磁盘信息" class="headerlink" title="2. 磁盘信息"></a>2. 磁盘信息</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>df -h</td>
<td><code>disk free</code> 显示磁盘剩余空间</td>
</tr>
<tr>
<td>02</td>
<td>du -h [目录名]</td>
<td><code>disk usage</code> 显示目录下的文件大小</td>
</tr>
</tbody></table>
<ul>
<li>选项说明</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-h</td>
<td>以人性化的方式显示文件大小</td>
</tr>
</tbody></table>
<h3 id="3-进程信息"><a href="#3-进程信息" class="headerlink" title="3. 进程信息"></a>3. 进程信息</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>ps aux</td>
<td><code>process status</code> 查看进程的详细状况</td>
</tr>
<tr>
<td>02</td>
<td>top</td>
<td>动态显示运行中的进程并且排序</td>
</tr>
<tr>
<td>03</td>
<td>kill [-9] 进程代号</td>
<td>终止指定代号的进程，<code>-9</code> 表示强行终止</td>
</tr>
</tbody></table>
<blockquote>
<p><code>ps</code> 默认只会显示当前用户通过终端启动的应用程序</p>
</blockquote>
<ul>
<li><code>ps</code> 选项说明</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>a</td>
<td>显示终端上的所有进程，包括其他用户的进程</td>
</tr>
<tr>
<td>u</td>
<td>显示进程的详细状态</td>
</tr>
<tr>
<td>x</td>
<td>显示没有控制终端的进程</td>
</tr>
</tbody></table>
<blockquote>
<ul>
<li>使用 <code>kill</code> 命令时，最好只终止由当前用户开启的进程，而不要终止 <code>root</code> 身份开启的进程，否则可能导致系统崩溃  </li>
<li>要退出 <code>top</code> 可以直接输入 <code>q</code></li>
</ul>
</blockquote>
<hr>
<h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><h3 id="1-查找文件"><a href="#1-查找文件" class="headerlink" title="1. 查找文件"></a>1. 查找文件</h3><ul>
<li><code>find</code> 在 <strong>特定的目录下搜索</strong> 符合条件的文件</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>find [路径] -name “*.py”</td>
<td>查找指定路径下扩展名是 <code>.py</code> 的文件，包括子目录</td>
</tr>
</tbody></table>
<ul>
<li>如果省略路径，表示在当前文件夹下查找</li>
<li>通配符，在使用 <code>find</code> 命令时同时可用</li>
</ul>
<h3 id="2-软链接"><a href="#2-软链接" class="headerlink" title="2. 软链接"></a>2. 软链接</h3><table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>ln -s 被链接的源文件 链接文件</td>
<td>建立文件的软链接，类似于 Windows下的快捷方式</td>
</tr>
</tbody></table>
<ul>
<li><ol>
<li>没有 <code>-s</code> 选项建立的是一个 <strong>硬链接文件</strong><br>两个文件占用相同大小的硬盘空间，<strong>工作中几乎不会建立文件的硬链接</strong></li>
</ol>
</li>
<li><ol start="2">
<li><strong>源文件要使用绝对路径</strong>，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用</li>
</ol>
</li>
</ul>
<blockquote>
<ul>
<li>在使用 <code>ln</code> 创建链接时，如果没有 <code>-s</code> 选项，会创建一个<strong>硬链接</strong>，而不是软链接</li>
<li>在 Linux 中，<strong>文件名</strong> 和 <strong>文件的数据</strong> 是分开存储的</li>
<li>在 Linux 中，只有文件的 <code>硬链接数 == 0</code> 才会被删除</li>
<li>使用 <code>ls -l</code> 可以查看一个文件的硬链接的数量</li>
<li>日常几乎不会建立文件的硬链接</li>
</ul>
</blockquote>
<h3 id="3-打包压缩"><a href="#3-打包压缩" class="headerlink" title="3. 打包压缩"></a>3. 打包压缩</h3><ul>
<li><strong>打包压缩</strong> 是日常工作中备份文件的一种方式</li>
<li>在不同操作系统中，常用的打包压缩方式是不同的<ul>
<li><code>Windows</code> 常用 <code>rar</code></li>
<li><code>Mac</code> 常用 <code>zip</code></li>
<li><code>Linux</code> 常用 <code>tar.gz</code></li>
</ul>
</li>
</ul>
<h4 id="3-1-打包／解包"><a href="#3-1-打包／解包" class="headerlink" title="3.1 打包／解包"></a>3.1 打包／解包</h4><ul>
<li><code>tar</code> 是 Linux 中最常用的<strong>备份</strong>工具，此命令可以<strong>把一系列文件</strong> 打包到 <strong>一个大文件中</strong>，也可以把一个 <strong>打包的大文件恢复成一系列文件</strong></li>
<li><code>tar</code> 的命令格式如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">打包文件 tar -cvf 打包文件.tar 被打包的文件／路径...</span><br><span class="line">解包文件 tar -xvf 打包文件.tar</span><br></pre></td></tr></table></figure>

<ul>
<li><code>tar</code> 选项说明</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>c</td>
<td>create，生成档案文件，创建打包文件</td>
</tr>
<tr>
<td>x</td>
<td>extract，解开档案文件</td>
</tr>
<tr>
<td>v</td>
<td>verbose，列出归档解档的详细过程，显示进度</td>
</tr>
<tr>
<td>f</td>
<td>file，指定档案文件名称，f 后面一定是 .tar 文件，所以必须放选项最后</td>
</tr>
</tbody></table>
<blockquote>
<p><code>f</code> 选项必须放在最后，其他选项顺序可以随意</p>
</blockquote>
<h4 id="3-2-压缩／解压缩"><a href="#3-2-压缩／解压缩" class="headerlink" title="3.2 压缩／解压缩"></a>3.2 压缩／解压缩</h4><h5 id="3-2-1-gzip"><a href="#3-2-1-gzip" class="headerlink" title="3.2.1 gzip"></a>3.2.1 <code>gzip</code></h5><ul>
<li><code>tar</code> 与 <code>gzip</code> 命令结合可以使用实现文件<strong>打包和压缩</strong><ul>
<li><code>tar</code> 只负责打包文件，但不压缩</li>
<li>用 <code>gzip</code> 压缩 <code>tar</code> 打包后的文件，其扩展名一般用 <code>xxx.tar.gz</code></li>
</ul>
</li>
</ul>
<blockquote>
<p>在 <code>Linux</code> 中，最常见的压缩文件格式就是 <code>xxx.tar.gz</code></p>
</blockquote>
<ul>
<li><p>在 <code>tar</code> 命令中有一个选项 <strong>-z</strong> 可以调用 <code>gzip</code>，从而可以方便的实现压缩和解压缩的功能</p>
</li>
<li><p>命令格式如下：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">压缩文件 tar -zcvf 打包文件.tar.gz 被压缩的文件／路径...</span><br><span class="line">解压缩文件 tar -zxvf 打包文件.tar.gz</span><br><span class="line">解压缩到指定路径 tar -zxvf 打包文件.tar.gz -C 目标路径</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-C</td>
<td>解压缩到指定目录，注意：要解压缩的目录必须存在</td>
</tr>
</tbody></table>
<h5 id="3-2-2-bzip2-two"><a href="#3-2-2-bzip2-two" class="headerlink" title="3.2.2 bzip2(two)"></a>3.2.2 <code>bzip2(two)</code></h5><ul>
<li><p><code>tar</code> 与 <code>bzip2</code> 命令结合可以使用实现文件<strong>打包和压缩</strong>（用法和 <code>gzip</code> 一样）</p>
<ul>
<li><code>tar</code> 只负责打包文件，但不压缩，</li>
<li>用 <code>bzip2</code> 压缩 <code>tar</code> 打包后的文件，其扩展名一般用 <code>xxx.tar.bz2</code></li>
</ul>
</li>
<li><p>在 <code>tar</code> 命令中有一个选项 <strong>-j</strong> 可以调用 <code>bzip2</code>，从而可以方便的实现压缩和解压缩的功能</p>
</li>
<li><p>命令格式如下：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">压缩文件 tar -jcvf 打包文件.tar.bz2 被压缩的文件／路径...</span><br><span class="line">解压缩文件 tar -jxvf 打包文件.tar.bz2</span><br></pre></td></tr></table></figure>

<h3 id="4-软件安装"><a href="#4-软件安装" class="headerlink" title="4. 软件安装"></a>4. 软件安装</h3><h4 id="4-1-通过-apt-安装／卸载软件"><a href="#4-1-通过-apt-安装／卸载软件" class="headerlink" title="4.1 通过 apt 安装／卸载软件"></a>4.1 通过 apt 安装／卸载软件</h4><ul>
<li>apt 是 <code>Advanced Packaging Tool</code>，是Linux下的一款安装包管理工具</li>
<li>可以在终端中方便的 <strong>安装</strong>／<strong>卸载</strong>／<strong>更新软件包</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">安装软件 sudo apt install 软件包</span><br><span class="line">卸载软件 sudo apt remove 软件名</span><br><span class="line">更新已安装的包 sudo apt upgrade </span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>STM32 学习笔记01</title>
    <url>/2021/07/20/stm32/</url>
    <content><![CDATA[<h2 id="部分英文缩写全称（to-be-continued）"><a href="#部分英文缩写全称（to-be-continued）" class="headerlink" title="部分英文缩写全称（to be continued）"></a>部分英文缩写全称（to be continued）</h2><ul>
<li><code>RTC</code> (Real_Time Clock) 实时时钟、时钟芯片</li>
<li><code>DMA</code> (Direct Memory Access) 直接存储器访问</li>
<li><code>SDIO</code>（Secure Digital Input and Output）安全数字输入输出</li>
<li><code>ADC</code>(Analog-to-Digital Converter) 模拟/数字转换器</li>
</ul>
<span id="more"></span>

<ul>
<li><code>SPI</code>(Serial Peripheral Interface) 串行外设接口，是一种高速的、全双工，同步的通信总线</li>
<li><code>PWM</code>(Pulse width modulation) 脉冲宽度调制</li>
<li><code>PLL</code>(Phase Locked Loop) 锁相回路或锁相环.用来统一整合时钟信号，使高频器件正常工作，如内存的存取资料等</li>
<li><code>JTAG</code>(Joint Test Action Group) 联合测试工作组</li>
<li><code>SWD</code>(Serial Wire Debug) 串行调试</li>
</ul>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>数据手册<code>pin definitions</code>中带FT标志的IO口兼容5V (原理图描述中带有<code>ADC</code>不兼容5V)</li>
<li>不要用IO口直接驱动感性负载（电机、电磁阀、继电器等）</li>
</ul>
<h2 id="STM32-芯片解读"><a href="#STM32-芯片解读" class="headerlink" title="STM32 芯片解读"></a>STM32 芯片解读</h2><ul>
<li>内核：<ul>
<li>32位 高性能ARM Cortex-M3处理器</li>
<li>时钟：高达72M，实际可超频一点</li>
<li>单周期乘法和硬件除法</li>
</ul>
</li>
<li>IO 口：<ul>
<li>大部分 IO 口耐5V</li>
<li>支持调试：<code>SWD</code>、<code>JTAG</code></li>
</ul>
</li>
<li><code>PIN to PIN</code>兼容  </li>
<li>低功耗<ul>
<li>睡眠、停止、待机</li>
<li>可用电池为RTC和备份寄存器供电</li>
</ul>
</li>
<li>定时器(11个)<ul>
<li>4个通用定时器</li>
<li>2个基本定时器</li>
<li>2个高级定时器</li>
<li>1个系统定时器</li>
<li>2个看门狗定时器</li>
</ul>
</li>
<li>通信接口<ul>
<li>2个IIC接口</li>
<li>5个串口</li>
<li>3个SPI接口</li>
<li>1个CAN2.0</li>
<li>1个USB FS</li>
<li>1个SDIO</li>
</ul>
</li>
<li>STM32 最小系统<ul>
<li>供电</li>
<li>复位</li>
<li>时钟：外部晶振</li>
<li>Boot启动模式选择</li>
<li>下载电路（串口/JTAG/SWD）</li>
<li>后备电池 </li>
</ul>
</li>
</ul>
]]></content>
  </entry>
</search>
